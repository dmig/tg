[project]
name = "tg"
description = "Terminal Telegram client."
authors = [
    { name = "Dmitry Geels", email = "dmitriy.geels@gmail.com" },
    { name = "Zubarev Grigoriy", email = "thirtysix@thirtysix.pw" },
    { name = "Paul Nameless", email = "reacsdas@gmail.com" },
]
license = "MIT"
readme = "readme.md"
requires-python = ">= 3.9"
keywords = [
    "telegram",
    "telegram-client",
    "telegram-cli",
    "tui",
    "tg",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: Communications :: Chat",
    "Typing :: Typed",
]
dependencies = [
    "python-telegram @ git+https://github.com/alexander-akhmetov/python-telegram",
]
dynamic = ["version"]

[tool.hatch.version]
path = "src/tg/__init__.py"

[project.urls]
"Source Code" = "https://github.com/dmig/tg"
"Issue Tracker" = "https://github.com/dmig/tg/issues"

[project.scripts]
tg = "tg.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
universal = true
dev-dependencies = [
    "mypy~=1.11.2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/tg"]

[tool.ruff]
target-version = "py39"
line-length = 99
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "G", # flake8-logging-format
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "PLC", # pylint conventions
    "PLE", # pylint errors
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "YTT", # flake8-2020
    "DTZ", # flake8-datetimez
    "RUF", # ruff-specific rules
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ASYNC", # flake8-async
]
ignore = [
    "PTH123", # `open()` should be replaced by `Path.open()`
    "RUF003", # Ambiguous unicode character comment
    "RUF001", # String contains ambiguous `Ð’` (CYRILLIC CAPITAL LETTER VE)
    "DTZ005", # `datetime.datetime.now()` called without a `tz` argument
    "DTZ006", # `datetime.datetime.fromtimestamp()` called without a `tz` argument
    "RET503", # Missing explicit return at the end of function able to return non-None value
    "S602", # subprocess call with shell=True seems safe, but may be changed in the future
]

[tool.ruff.lint.per-file-ignores]
"config.py" = ["E501"]

[tool.mypy]
strict = true
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    "build",
    "dist",
]
